{
	"id": "a6c73dcaad1b150b3af11f8c6a6971c6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GLCCOIN.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2020-09-09\n*/\n\npragma solidity 0.5.16;\n\ninterface IGLC {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract GLC is Context, IGLC, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 public _decimals;\n  string public _symbol;\n  string public _name;\n\n  constructor() public {\n    _name = \"GoldCoin\";\n    _symbol = \"GLC\";\n    _decimals = 18;\n    _totalSupply = 30000 * 10**18;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(uint256 amount) public returns (bool) {\n    _burn(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/GLCCOIN.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GLCCOIN.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GLCCOIN.sol\":{\"keccak256\":\"0xe67c84a836f594f24b8082d57a287e482ffb6a720291a19ce06033322f09a06d\",\"urls\":[\"bzz-raw://a580fcbb614f852bcf418b3964a7ffb26d9adba12148dd6990de2dbe55df4d14\",\"dweb:/ipfs/QmQLbrHdDjWmwx9PaRm9ZogCS3ThEmJ43SHyZChNn8nrLg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"GLC": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/GLCCOIN.sol\":11032:18761  contract GLC is Context, IGLC, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GLCCOIN.sol\":11338:11564  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/GLCCOIN.sol\":11338:11564  constructor() public {... */\n  pop\n    /* \"contracts/GLCCOIN.sol\":9591:9608  address msgSender */\n  0x00\n    /* \"contracts/GLCCOIN.sol\":9611:9623  _msgSender() */\n  tag_7\n    /* \"contracts/GLCCOIN.sol\":9611:9621  _msgSender */\n  shl(0x20, tag_8)\n    /* \"contracts/GLCCOIN.sol\":9611:9623  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/GLCCOIN.sol\":9591:9623  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"contracts/GLCCOIN.sol\":9638:9647  msgSender */\n  dup1\n    /* \"contracts/GLCCOIN.sol\":9629:9635  _owner */\n  0x00\n  dup1\n    /* \"contracts/GLCCOIN.sol\":9629:9647  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":9691:9700  msgSender */\n  dup1\n    /* \"contracts/GLCCOIN.sol\":9658:9701  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/GLCCOIN.sol\":9687:9688  0 */\n  0x00\n    /* \"contracts/GLCCOIN.sol\":9658:9701  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/GLCCOIN.sol\":9561:9706  constructor () internal {... */\n  pop\n    /* \"contracts/GLCCOIN.sol\":11365:11383  _name = \"GoldCoin\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x476f6c64436f696e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":11365:11370  _name */\n  0x06\n    /* \"contracts/GLCCOIN.sol\":11365:11383  _name = \"GoldCoin\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/GLCCOIN.sol\":11389:11404  _symbol = \"GLC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x474c430000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":11389:11396  _symbol */\n  0x05\n    /* \"contracts/GLCCOIN.sol\":11389:11404  _symbol = \"GLC\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/GLCCOIN.sol\":11422:11424  18 */\n  0x12\n    /* \"contracts/GLCCOIN.sol\":11410:11419  _decimals */\n  0x04\n  0x00\n    /* \"contracts/GLCCOIN.sol\":11410:11424  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":11445:11459  30000 * 10**18 */\n  0x065a4da25d3016c00000\n    /* \"contracts/GLCCOIN.sol\":11430:11442  _totalSupply */\n  0x03\n    /* \"contracts/GLCCOIN.sol\":11430:11459  _totalSupply = 30000 * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":11489:11501  _totalSupply */\n  sload(0x03)\n    /* \"contracts/GLCCOIN.sol\":11465:11474  _balances */\n  0x01\n    /* \"contracts/GLCCOIN.sol\":11465:11486  _balances[msg.sender] */\n  0x00\n    /* \"contracts/GLCCOIN.sol\":11475:11485  msg.sender */\n  caller\n    /* \"contracts/GLCCOIN.sol\":11465:11486  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/GLCCOIN.sol\":11465:11501  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/GLCCOIN.sol\":11534:11544  msg.sender */\n  caller\n    /* \"contracts/GLCCOIN.sol\":11513:11559  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/GLCCOIN.sol\":11530:11531  0 */\n  0x00\n    /* \"contracts/GLCCOIN.sol\":11513:11559  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/GLCCOIN.sol\":11546:11558  _totalSupply */\n  sload(0x03)\n    /* \"contracts/GLCCOIN.sol\":11513:11559  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/GLCCOIN.sol\":11032:18761  contract GLC is Context, IGLC, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/GLCCOIN.sol\":3659:3749  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/GLCCOIN.sol\":3704:3719  address payable */\n  0x00\n    /* \"contracts/GLCCOIN.sol\":3734:3744  msg.sender */\n  caller\n    /* \"contracts/GLCCOIN.sol\":3727:3744  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/GLCCOIN.sol\":3659:3749  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/GLCCOIN.sol\":11032:18761  contract GLC is Context, IGLC, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GLCCOIN.sol\":11032:18761  contract GLC is Context, IGLC, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/GLCCOIN.sol\":11032:18761  contract GLC is Context, IGLC, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GLCCOIN.sol\":12008:12085  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/GLCCOIN.sol\":12008:12085  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":13003:13144  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"contracts/GLCCOIN.sol\":13003:13144  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":12136:12221  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":13575:13863  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"contracts/GLCCOIN.sol\":13575:13863  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":11750:11827  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":11263:11285  uint8 public _decimals */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":14231:14428  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/GLCCOIN.sol\":14231:14428  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":15519:15626  function burn(uint256 amount) public returns (bool) {... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"contracts/GLCCOIN.sol\":15519:15626  function burn(uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":12270:12374  function balanceOf(address account) external view returns (uint256) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"contracts/GLCCOIN.sol\":12270:12374  function balanceOf(address account) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":10357:10484  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/GLCCOIN.sol\":11619:11696  function getOwner() external view returns (address) {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":9774:9845  function owner() public view returns (address) {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":11879:11960  function symbol() external view returns (string memory) {... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/GLCCOIN.sol\":11879:11960  function symbol() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":15322:15439  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/GLCCOIN.sol\":15322:15439  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":14884:15132  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/GLCCOIN.sol\":14884:15132  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":12558:12705  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"contracts/GLCCOIN.sol\":12558:12705  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":11289:11310  string public _symbol */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/GLCCOIN.sol\":11289:11310  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":11314:11333  string public _name */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_82:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_82)\n    tag_84:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/GLCCOIN.sol\":11314:11333  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_85:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":12754:12882  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"contracts/GLCCOIN.sol\":12754:12882  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GLCCOIN.sol\":10623:10724  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"contracts/GLCCOIN.sol\":10623:10724  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/GLCCOIN.sol\":12008:12085  function name() external view returns (string memory) {... */\n    tag_27:\n        /* \"contracts/GLCCOIN.sol\":12047:12060  string memory */\n      0x60\n        /* \"contracts/GLCCOIN.sol\":12075:12080  _name */\n      0x06\n        /* \"contracts/GLCCOIN.sol\":12068:12080  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":12008:12085  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":13003:13144  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_34:\n        /* \"contracts/GLCCOIN.sol\":13071:13075  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":13083:13122  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"contracts/GLCCOIN.sol\":13092:13104  _msgSender() */\n      tag_98\n        /* \"contracts/GLCCOIN.sol\":13092:13102  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":13092:13104  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/GLCCOIN.sol\":13106:13113  spender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13115:13121  amount */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13083:13091  _approve */\n      tag_100\n        /* \"contracts/GLCCOIN.sol\":13083:13122  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/GLCCOIN.sol\":13135:13139  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":13128:13139  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":13003:13144  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":12136:12221  function totalSupply() external view returns (uint256) {... */\n    tag_36:\n        /* \"contracts/GLCCOIN.sol\":12182:12189  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12204:12216  _totalSupply */\n      sload(0x03)\n        /* \"contracts/GLCCOIN.sol\":12197:12216  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":12136:12221  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":13575:13863  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_39:\n        /* \"contracts/GLCCOIN.sol\":13666:13670  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":13678:13714  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"contracts/GLCCOIN.sol\":13688:13694  sender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13696:13705  recipient */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13707:13713  amount */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13678:13687  _transfer */\n      tag_104\n        /* \"contracts/GLCCOIN.sol\":13678:13714  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/GLCCOIN.sol\":13720:13841  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"contracts/GLCCOIN.sol\":13729:13735  sender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":13737:13749  _msgSender() */\n      tag_106\n        /* \"contracts/GLCCOIN.sol\":13737:13747  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":13737:13749  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/GLCCOIN.sol\":13751:13840  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"contracts/GLCCOIN.sol\":13789:13795  amount */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":13751:13840  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"contracts/GLCCOIN.sol\":13751:13762  _allowances */\n      0x02\n        /* \"contracts/GLCCOIN.sol\":13751:13770  _allowances[sender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":13763:13769  sender */\n      dup12\n        /* \"contracts/GLCCOIN.sol\":13751:13770  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":13751:13784  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":13771:13783  _msgSender() */\n      tag_108\n        /* \"contracts/GLCCOIN.sol\":13771:13781  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":13771:13783  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/GLCCOIN.sol\":13751:13784  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":13751:13788  _allowances[sender][_msgSender()].sub */\n      tag_109\n      swap1\n        /* \"contracts/GLCCOIN.sol\":13751:13840  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/GLCCOIN.sol\":13720:13728  _approve */\n      tag_100\n        /* \"contracts/GLCCOIN.sol\":13720:13841  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/GLCCOIN.sol\":13854:13858  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":13847:13858  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":13575:13863  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11750:11827  function decimals() external view returns (uint8) {... */\n    tag_41:\n        /* \"contracts/GLCCOIN.sol\":11793:11798  uint8 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":11813:11822  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GLCCOIN.sol\":11806:11822  return _decimals */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":11750:11827  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11263:11285  uint8 public _decimals */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":14231:14428  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_46:\n        /* \"contracts/GLCCOIN.sol\":14311:14315  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":14323:14406  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_112\n        /* \"contracts/GLCCOIN.sol\":14332:14344  _msgSender() */\n      tag_113\n        /* \"contracts/GLCCOIN.sol\":14332:14342  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":14332:14344  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/GLCCOIN.sol\":14346:14353  spender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":14355:14405  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_114\n        /* \"contracts/GLCCOIN.sol\":14394:14404  addedValue */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":14355:14366  _allowances */\n      0x02\n        /* \"contracts/GLCCOIN.sol\":14355:14380  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":14367:14379  _msgSender() */\n      tag_115\n        /* \"contracts/GLCCOIN.sol\":14367:14377  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":14367:14379  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/GLCCOIN.sol\":14355:14380  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":14355:14389  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":14381:14388  spender */\n      dup10\n        /* \"contracts/GLCCOIN.sol\":14355:14389  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":14355:14393  _allowances[_msgSender()][spender].add */\n      tag_116\n      swap1\n        /* \"contracts/GLCCOIN.sol\":14355:14405  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"contracts/GLCCOIN.sol\":14323:14331  _approve */\n      tag_100\n        /* \"contracts/GLCCOIN.sol\":14323:14406  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/GLCCOIN.sol\":14419:14423  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":14412:14423  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":14231:14428  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":15519:15626  function burn(uint256 amount) public returns (bool) {... */\n    tag_49:\n        /* \"contracts/GLCCOIN.sol\":15565:15569  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":15577:15604  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"contracts/GLCCOIN.sol\":15583:15595  _msgSender() */\n      tag_119\n        /* \"contracts/GLCCOIN.sol\":15583:15593  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":15583:15595  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/GLCCOIN.sol\":15597:15603  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":15577:15582  _burn */\n      tag_120\n        /* \"contracts/GLCCOIN.sol\":15577:15604  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/GLCCOIN.sol\":15617:15621  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":15610:15621  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":15519:15626  function burn(uint256 amount) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":12270:12374  function balanceOf(address account) external view returns (uint256) {... */\n    tag_52:\n        /* \"contracts/GLCCOIN.sol\":12329:12336  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12351:12360  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":12351:12369  _balances[account] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12361:12368  account */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":12351:12369  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":12344:12369  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":12270:12374  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":10357:10484  function renounceOwnership() public onlyOwner {... */\n    tag_54:\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      tag_123\n        /* \"contracts/GLCCOIN.sol\":9970:9980  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9966  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/GLCCOIN.sol\":9952:10019  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/GLCCOIN.sol\":10451:10452  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":10414:10454  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":10435:10441  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":10414:10454  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":10477:10478  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":10460:10466  _owner */\n      dup1\n      0x00\n        /* \"contracts/GLCCOIN.sol\":10460:10479  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":10357:10484  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11619:11696  function getOwner() external view returns (address) {... */\n    tag_56:\n        /* \"contracts/GLCCOIN.sol\":11662:11669  address */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":11684:11691  owner() */\n      tag_127\n        /* \"contracts/GLCCOIN.sol\":11684:11689  owner */\n      tag_58\n        /* \"contracts/GLCCOIN.sol\":11684:11691  owner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/GLCCOIN.sol\":11677:11691  return owner() */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":11619:11696  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":9774:9845  function owner() public view returns (address) {... */\n    tag_58:\n        /* \"contracts/GLCCOIN.sol\":9812:9819  address */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":9834:9840  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9827:9840  return _owner */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":9774:9845  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11879:11960  function symbol() external view returns (string memory) {... */\n    tag_60:\n        /* \"contracts/GLCCOIN.sol\":11920:11933  string memory */\n      0x60\n        /* \"contracts/GLCCOIN.sol\":11948:11955  _symbol */\n      0x05\n        /* \"contracts/GLCCOIN.sol\":11941:11955  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":11879:11960  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":15322:15439  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_67:\n        /* \"contracts/GLCCOIN.sol\":15378:15382  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      tag_134\n        /* \"contracts/GLCCOIN.sol\":9970:9980  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9966  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/GLCCOIN.sol\":9952:10019  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/GLCCOIN.sol\":15390:15417  _mint(_msgSender(), amount) */\n      tag_137\n        /* \"contracts/GLCCOIN.sol\":15396:15408  _msgSender() */\n      tag_138\n        /* \"contracts/GLCCOIN.sol\":15396:15406  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":15396:15408  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/GLCCOIN.sol\":15410:15416  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":15390:15395  _mint */\n      tag_139\n        /* \"contracts/GLCCOIN.sol\":15390:15417  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/GLCCOIN.sol\":15430:15434  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":15423:15434  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":15322:15439  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":14884:15132  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_70:\n        /* \"contracts/GLCCOIN.sol\":14969:14973  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":14981:15110  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_141\n        /* \"contracts/GLCCOIN.sol\":14990:15002  _msgSender() */\n      tag_142\n        /* \"contracts/GLCCOIN.sol\":14990:15000  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":14990:15002  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/GLCCOIN.sol\":15004:15011  spender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":15013:15109  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_143\n        /* \"contracts/GLCCOIN.sol\":15052:15067  subtractedValue */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":15013:15109  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/GLCCOIN.sol\":15013:15024  _allowances */\n      0x02\n        /* \"contracts/GLCCOIN.sol\":15013:15038  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":15025:15037  _msgSender() */\n      tag_144\n        /* \"contracts/GLCCOIN.sol\":15025:15035  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":15025:15037  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/GLCCOIN.sol\":15013:15038  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":15013:15047  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":15039:15046  spender */\n      dup11\n        /* \"contracts/GLCCOIN.sol\":15013:15047  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":15013:15051  _allowances[_msgSender()][spender].sub */\n      tag_109\n      swap1\n        /* \"contracts/GLCCOIN.sol\":15013:15109  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/GLCCOIN.sol\":14981:14989  _approve */\n      tag_100\n        /* \"contracts/GLCCOIN.sol\":14981:15110  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/GLCCOIN.sol\":15123:15127  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":15116:15127  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":14884:15132  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":12558:12705  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_73:\n        /* \"contracts/GLCCOIN.sol\":12629:12633  bool */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12641:12683  _transfer(_msgSender(), recipient, amount) */\n      tag_146\n        /* \"contracts/GLCCOIN.sol\":12651:12663  _msgSender() */\n      tag_147\n        /* \"contracts/GLCCOIN.sol\":12651:12661  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":12651:12663  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/GLCCOIN.sol\":12665:12674  recipient */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":12676:12682  amount */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":12641:12650  _transfer */\n      tag_104\n        /* \"contracts/GLCCOIN.sol\":12641:12683  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/GLCCOIN.sol\":12696:12700  true */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":12689:12700  return true */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":12558:12705  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11289:11310  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":11314:11333  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":12754:12882  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_88:\n        /* \"contracts/GLCCOIN.sol\":12828:12835  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12850:12861  _allowances */\n      0x02\n        /* \"contracts/GLCCOIN.sol\":12850:12868  _allowances[owner] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12862:12867  owner */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":12850:12868  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":12850:12877  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":12869:12876  spender */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":12850:12877  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":12843:12877  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":12754:12882  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":10623:10724  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_91:\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      tag_156\n        /* \"contracts/GLCCOIN.sol\":9970:9980  _msgSender */\n      tag_99\n        /* \"contracts/GLCCOIN.sol\":9970:9982  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9966  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":9960:9982  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/GLCCOIN.sol\":9952:10019  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/GLCCOIN.sol\":10691:10719  _transferOwnership(newOwner) */\n      tag_159\n        /* \"contracts/GLCCOIN.sol\":10710:10718  newOwner */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":10691:10709  _transferOwnership */\n      tag_160\n        /* \"contracts/GLCCOIN.sol\":10691:10719  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/GLCCOIN.sol\":10623:10724  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":3659:3749  function _msgSender() internal view returns (address payable) {... */\n    tag_99:\n        /* \"contracts/GLCCOIN.sol\":3704:3719  address payable */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":3734:3744  msg.sender */\n      caller\n        /* \"contracts/GLCCOIN.sol\":3727:3744  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":3659:3749  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":18062:18376  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_100:\n        /* \"contracts/GLCCOIN.sol\":18168:18169  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":18151:18170  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":18151:18156  owner */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":18151:18170  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":18143:18211  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/GLCCOIN.sol\":18244:18245  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":18225:18246  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":18225:18232  spender */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":18225:18246  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":18217:18285  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/GLCCOIN.sol\":18322:18328  amount */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":18292:18303  _allowances */\n      0x02\n        /* \"contracts/GLCCOIN.sol\":18292:18310  _allowances[owner] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":18304:18309  owner */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":18292:18310  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":18292:18319  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":18311:18318  spender */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":18292:18319  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":18292:18328  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":18355:18362  spender */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":18339:18371  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":18348:18353  owner */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":18339:18371  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/GLCCOIN.sol\":18364:18370  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":18339:18371  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":18062:18376  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":16070:16512  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_104:\n        /* \"contracts/GLCCOIN.sol\":16181:16182  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16163:16183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":16163:16169  sender */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":16163:16183  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":16155:16225  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/GLCCOIN.sol\":16260:16261  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16239:16262  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":16239:16248  recipient */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":16239:16262  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":16231:16302  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/GLCCOIN.sol\":16329:16400  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"contracts/GLCCOIN.sol\":16351:16357  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":16329:16400  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"contracts/GLCCOIN.sol\":16329:16338  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16329:16346  _balances[sender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16339:16345  sender */\n      dup8\n        /* \"contracts/GLCCOIN.sol\":16329:16346  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":16329:16350  _balances[sender].sub */\n      tag_109\n      swap1\n        /* \"contracts/GLCCOIN.sol\":16329:16400  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/GLCCOIN.sol\":16309:16318  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16309:16326  _balances[sender] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16319:16325  sender */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":16309:16326  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":16309:16400  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":16429:16461  _balances[recipient].add(amount) */\n      tag_169\n        /* \"contracts/GLCCOIN.sol\":16454:16460  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":16429:16438  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16429:16449  _balances[recipient] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16439:16448  recipient */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":16429:16449  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":16429:16453  _balances[recipient].add */\n      tag_116\n      swap1\n        /* \"contracts/GLCCOIN.sol\":16429:16461  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/GLCCOIN.sol\":16406:16415  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16406:16426  _balances[recipient] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16416:16425  recipient */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":16406:16426  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":16406:16461  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":16489:16498  recipient */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":16472:16507  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":16481:16487  sender */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":16472:16507  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GLCCOIN.sol\":16500:16506  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":16472:16507  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":16070:16512  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":5556:5729  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"contracts/GLCCOIN.sol\":5642:5649  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":5670:5671  a */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":5665:5666  b */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":5665:5671  b <= a */\n      gt\n      iszero\n        /* \"contracts/GLCCOIN.sol\":5673:5685  errorMessage */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":5657:5686  require(b <= a, errorMessage) */\n      swap1\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_174:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/GLCCOIN.sol\":5657:5686  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n        /* \"contracts/GLCCOIN.sol\":5692:5701  uint256 c */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":5708:5709  b */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":5704:5705  a */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":5704:5709  a - b */\n      sub\n        /* \"contracts/GLCCOIN.sol\":5692:5709  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":5723:5724  c */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":5716:5724  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/GLCCOIN.sol\":5556:5729  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":4758:4920  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_116:\n        /* \"contracts/GLCCOIN.sol\":4816:4823  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":4831:4840  uint256 c */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":4847:4848  b */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":4843:4844  a */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":4843:4848  a + b */\n      add\n        /* \"contracts/GLCCOIN.sol\":4831:4848  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":4867:4868  a */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":4862:4863  c */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":4862:4868  c >= a */\n      lt\n      iszero\n        /* \"contracts/GLCCOIN.sol\":4854:4900  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/GLCCOIN.sol\":4914:4915  c */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":4907:4915  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/GLCCOIN.sol\":4758:4920  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":17341:17665  function _burn(address account, uint256 amount) internal {... */\n    tag_120:\n        /* \"contracts/GLCCOIN.sol\":17431:17432  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":17412:17433  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":17412:17419  account */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":17412:17433  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":17404:17471  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/GLCCOIN.sol\":17499:17567  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_180\n        /* \"contracts/GLCCOIN.sol\":17522:17528  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":17499:17567  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"contracts/GLCCOIN.sol\":17499:17508  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":17499:17517  _balances[account] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":17509:17516  account */\n      dup7\n        /* \"contracts/GLCCOIN.sol\":17499:17517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":17499:17521  _balances[account].sub */\n      tag_109\n      swap1\n        /* \"contracts/GLCCOIN.sol\":17499:17567  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contracts/GLCCOIN.sol\":17478:17487  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":17478:17496  _balances[account] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":17488:17495  account */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":17478:17496  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":17478:17567  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":17588:17612  _totalSupply.sub(amount) */\n      tag_181\n        /* \"contracts/GLCCOIN.sol\":17605:17611  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":17588:17600  _totalSupply */\n      sload(0x03)\n        /* \"contracts/GLCCOIN.sol\":17588:17604  _totalSupply.sub */\n      tag_182\n      swap1\n        /* \"contracts/GLCCOIN.sol\":17588:17612  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/GLCCOIN.sol\":17573:17585  _totalSupply */\n      0x03\n        /* \"contracts/GLCCOIN.sol\":17573:17612  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":17649:17650  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":17623:17660  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":17632:17639  account */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":17623:17660  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GLCCOIN.sol\":17653:17659  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":17623:17660  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":17341:17665  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":16762:17046  function _mint(address account, uint256 amount) internal {... */\n    tag_139:\n        /* \"contracts/GLCCOIN.sol\":16852:16853  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16833:16854  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":16833:16840  account */\n      dup3\n        /* \"contracts/GLCCOIN.sol\":16833:16854  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":16825:16890  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/GLCCOIN.sol\":16912:16936  _totalSupply.add(amount) */\n      tag_185\n        /* \"contracts/GLCCOIN.sol\":16929:16935  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":16912:16924  _totalSupply */\n      sload(0x03)\n        /* \"contracts/GLCCOIN.sol\":16912:16928  _totalSupply.add */\n      tag_116\n      swap1\n        /* \"contracts/GLCCOIN.sol\":16912:16936  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/GLCCOIN.sol\":16897:16909  _totalSupply */\n      0x03\n        /* \"contracts/GLCCOIN.sol\":16897:16936  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":16963:16993  _balances[account].add(amount) */\n      tag_186\n        /* \"contracts/GLCCOIN.sol\":16986:16992  amount */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":16963:16972  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16963:16981  _balances[account] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16973:16980  account */\n      dup6\n        /* \"contracts/GLCCOIN.sol\":16963:16981  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GLCCOIN.sol\":16963:16985  _balances[account].add */\n      tag_116\n      swap1\n        /* \"contracts/GLCCOIN.sol\":16963:16993  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/GLCCOIN.sol\":16942:16951  _balances */\n      0x01\n        /* \"contracts/GLCCOIN.sol\":16942:16960  _balances[account] */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":16952:16959  account */\n      dup5\n        /* \"contracts/GLCCOIN.sol\":16942:16960  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GLCCOIN.sol\":16942:16993  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":17025:17032  account */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":17004:17041  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":17021:17022  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":17004:17041  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/GLCCOIN.sol\":17034:17040  amount */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":17004:17041  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":16762:17046  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":10817:11028  function _transferOwnership(address newOwner) internal {... */\n    tag_160:\n        /* \"contracts/GLCCOIN.sol\":10906:10907  0 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":10886:10908  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":10886:10894  newOwner */\n      dup2\n        /* \"contracts/GLCCOIN.sol\":10886:10908  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/GLCCOIN.sol\":10878:10951  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/GLCCOIN.sol\":10991:10999  newOwner */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":10962:11000  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":10983:10989  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GLCCOIN.sol\":10962:11000  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/GLCCOIN.sol\":11015:11023  newOwner */\n      dup1\n        /* \"contracts/GLCCOIN.sol\":11006:11012  _owner */\n      0x00\n      dup1\n        /* \"contracts/GLCCOIN.sol\":11006:11023  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":10817:11028  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/GLCCOIN.sol\":5164:5292  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"contracts/GLCCOIN.sol\":5222:5229  uint256 */\n      0x00\n        /* \"contracts/GLCCOIN.sol\":5244:5287  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_190\n        /* \"contracts/GLCCOIN.sol\":5248:5249  a */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":5251:5252  b */\n      dup4\n        /* \"contracts/GLCCOIN.sol\":5244:5287  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/GLCCOIN.sol\":5244:5247  sub */\n      tag_109\n        /* \"contracts/GLCCOIN.sol\":5244:5287  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_190:\n        /* \"contracts/GLCCOIN.sol\":5237:5287  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/GLCCOIN.sol\":5164:5292  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820cc6984c2b7bceb32a195bacc39e31432dab0d1ec36017a905a60c4354d3d706764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600881526020017f476f6c64436f696e000000000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000247565b506040518060400160405280600381526020017f474c430000000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000247565b506012600460006101000a81548160ff021916908360ff16021790555069065a4da25d3016c00000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f6565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028a57805160ff1916838001178555620002bb565b82800160010185558215620002bb579182015b82811115620002ba5782518255916020019190600101906200029d565b5b509050620002ca9190620002ce565b5090565b620002f391905b80821115620002ef576000816000905550600101620002d5565b5090565b90565b611e5380620003066000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820cc6984c2b7bceb32a195bacc39e31432dab0d1ec36017a905a60c4354d3d706764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x23F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6C64436F696E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x247 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x474C430000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x247 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH10 0x65A4DA25D3016C00000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CA SWAP2 SWAP1 PUSH3 0x2CE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2EF JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E53 DUP1 PUSH3 0x306 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820CC6984C2B7BCEB ORIGIN LOG1 SWAP6 0xBA 0xCC CODECOPY 0xE3 EQ ORIGIN 0xDA 0xB0 0xD1 0xEC CALLDATASIZE ADD PUSH27 0x905A60C4354D3D706764736F6C6343000510003200000000000000 ",
							"sourceMap": "11032:7729:0:-;;;11338:226;8:9:-1;5:2;;;30:1;27;20:12;5:2;11338:226:0;9591:17;9611:12;:10;;;:12;;:::i;:::-;9591:32;;9638:9;9629:6;;:18;;;;;;;;;;;;;;;;;;9691:9;9658:43;;9687:1;9658:43;;;;;;;;;;;;9561:145;11365:18;;;;;;;;;;;;;;;;;:5;:18;;;;;;;;;;;;:::i;:::-;;11389:15;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;11422:2;11410:9;;:14;;;;;;;;;;;;;;;;;;11445;11430:12;:29;;;;11489:12;;11465:9;:21;11475:10;11465:21;;;;;;;;;;;;;;;:36;;;;11534:10;11513:46;;11530:1;11513:46;;;11546:12;;11513:46;;;;;;;;;;;;;;;;;;11032:7729;;3659:90;3704:15;3734:10;3727:17;;3659:90;:::o;11032:7729::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820CC6984C2B7BCEB ORIGIN LOG1 SWAP6 0xBA 0xCC CODECOPY 0xE3 EQ ORIGIN 0xDA 0xB0 0xD1 0xEC CALLDATASIZE ADD PUSH27 0x905A60C4354D3D706764736F6C6343000510003200000000000000 ",
							"sourceMap": "11032:7729:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11032:7729:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12008:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12008:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13003:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13003:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12136:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13575:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13575:288:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11750:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11263:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14231:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14231:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15519:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15519:107:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12270:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12270:104:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10357:127;;;:::i;:::-;;11619:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9774:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11879:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11879:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15322:117;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15322:117:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14884:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14884:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12558:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12558:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11289:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11289:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11314:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11314:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12754:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12754:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10623:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10623:101:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12008:77;12047:13;12075:5;12068:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12008:77;:::o;13003:141::-;13071:4;13083:39;13092:12;:10;:12::i;:::-;13106:7;13115:6;13083:8;:39::i;:::-;13135:4;13128:11;;13003:141;;;;:::o;12136:85::-;12182:7;12204:12;;12197:19;;12136:85;:::o;13575:288::-;13666:4;13678:36;13688:6;13696:9;13707:6;13678:9;:36::i;:::-;13720:121;13729:6;13737:12;:10;:12::i;:::-;13751:89;13789:6;13751:89;;;;;;;;;;;;;;;;;:11;:19;13763:6;13751:19;;;;;;;;;;;;;;;:33;13771:12;:10;:12::i;:::-;13751:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;13720:8;:121::i;:::-;13854:4;13847:11;;13575:288;;;;;:::o;11750:77::-;11793:5;11813:9;;;;;;;;;;;11806:16;;11750:77;:::o;11263:22::-;;;;;;;;;;;;;:::o;14231:197::-;14311:4;14323:83;14332:12;:10;:12::i;:::-;14346:7;14355:50;14394:10;14355:11;:25;14367:12;:10;:12::i;:::-;14355:25;;;;;;;;;;;;;;;:34;14381:7;14355:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14323:8;:83::i;:::-;14419:4;14412:11;;14231:197;;;;:::o;15519:107::-;15565:4;15577:27;15583:12;:10;:12::i;:::-;15597:6;15577:5;:27::i;:::-;15617:4;15610:11;;15519:107;;;:::o;12270:104::-;12329:7;12351:9;:18;12361:7;12351:18;;;;;;;;;;;;;;;;12344:25;;12270:104;;;:::o;10357:127::-;9970:12;:10;:12::i;:::-;9960:22;;:6;;;;;;;;;;;:22;;;9952:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10451:1;10414:40;;10435:6;;;;;;;;;;;10414:40;;;;;;;;;;;;10477:1;10460:6;;:19;;;;;;;;;;;;;;;;;;10357:127::o;11619:77::-;11662:7;11684;:5;:7::i;:::-;11677:14;;11619:77;:::o;9774:71::-;9812:7;9834:6;;;;;;;;;;;9827:13;;9774:71;:::o;11879:81::-;11920:13;11948:7;11941:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11879:81;:::o;15322:117::-;15378:4;9970:12;:10;:12::i;:::-;9960:22;;:6;;;;;;;;;;;:22;;;9952:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15390:27;15396:12;:10;:12::i;:::-;15410:6;15390:5;:27::i;:::-;15430:4;15423:11;;15322:117;;;:::o;14884:248::-;14969:4;14981:129;14990:12;:10;:12::i;:::-;15004:7;15013:96;15052:15;15013:96;;;;;;;;;;;;;;;;;:11;:25;15025:12;:10;:12::i;:::-;15013:25;;;;;;;;;;;;;;;:34;15039:7;15013:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;14981:8;:129::i;:::-;15123:4;15116:11;;14884:248;;;;:::o;12558:147::-;12629:4;12641:42;12651:12;:10;:12::i;:::-;12665:9;12676:6;12641:9;:42::i;:::-;12696:4;12689:11;;12558:147;;;;:::o;11289:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11314:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12754:128::-;12828:7;12850:11;:18;12862:5;12850:18;;;;;;;;;;;;;;;:27;12869:7;12850:27;;;;;;;;;;;;;;;;12843:34;;12754:128;;;;:::o;10623:101::-;9970:12;:10;:12::i;:::-;9960:22;;:6;;;;;;;;;;;:22;;;9952:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10691:28;10710:8;10691:18;:28::i;:::-;10623:101;:::o;3659:90::-;3704:15;3734:10;3727:17;;3659:90;:::o;18062:314::-;18168:1;18151:19;;:5;:19;;;;18143:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18244:1;18225:21;;:7;:21;;;;18217:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18322:6;18292:11;:18;18304:5;18292:18;;;;;;;;;;;;;;;:27;18311:7;18292:27;;;;;;;;;;;;;;;:36;;;;18355:7;18339:32;;18348:5;18339:32;;;18364:6;18339:32;;;;;;;;;;;;;;;;;;18062:314;;;:::o;16070:442::-;16181:1;16163:20;;:6;:20;;;;16155:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16260:1;16239:23;;:9;:23;;;;16231:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16329;16351:6;16329:71;;;;;;;;;;;;;;;;;:9;:17;16339:6;16329:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16309:9;:17;16319:6;16309:17;;;;;;;;;;;;;;;:91;;;;16429:32;16454:6;16429:9;:20;16439:9;16429:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16406:9;:20;16416:9;16406:20;;;;;;;;;;;;;;;:55;;;;16489:9;16472:35;;16481:6;16472:35;;;16500:6;16472:35;;;;;;;;;;;;;;;;;;16070:442;;;:::o;5556:173::-;5642:7;5670:1;5665;:6;;5673:12;5657:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5657:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5692:9;5708:1;5704;:5;5692:17;;5723:1;5716:8;;;5556:173;;;;;:::o;4758:162::-;4816:7;4831:9;4847:1;4843;:5;4831:17;;4867:1;4862;:6;;4854:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4914:1;4907:8;;;4758:162;;;;:::o;17341:324::-;17431:1;17412:21;;:7;:21;;;;17404:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17499:68;17522:6;17499:68;;;;;;;;;;;;;;;;;:9;:18;17509:7;17499:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;17478:9;:18;17488:7;17478:18;;;;;;;;;;;;;;;:89;;;;17588:24;17605:6;17588:12;;:16;;:24;;;;:::i;:::-;17573:12;:39;;;;17649:1;17623:37;;17632:7;17623:37;;;17653:6;17623:37;;;;;;;;;;;;;;;;;;17341:324;;:::o;16762:284::-;16852:1;16833:21;;:7;:21;;;;16825:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16912:24;16929:6;16912:12;;:16;;:24;;;;:::i;:::-;16897:12;:39;;;;16963:30;16986:6;16963:9;:18;16973:7;16963:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;16942:9;:18;16952:7;16942:18;;;;;;;;;;;;;;;:51;;;;17025:7;17004:37;;17021:1;17004:37;;;17034:6;17004:37;;;;;;;;;;;;;;;;;;16762:284;;:::o;10817:211::-;10906:1;10886:22;;:8;:22;;;;10878:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10991:8;10962:38;;10983:6;;;;;;;;;;;10962:38;;;;;;;;;;;;11015:8;11006:6;;:17;;;;;;;;;;;;;;;;;;10817:211;:::o;5164:128::-;5222:7;5244:43;5248:1;5251;5244:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5237:50;;5164:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1552600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1076",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"decimals()": "1173",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11564,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11338,
									"end": 11564,
									"name": "POP"
								},
								{
									"begin": 9591,
									"end": 9608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9611,
									"end": 9621,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9611,
									"end": 9621,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9621,
									"name": "SHL"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "SHR"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9611,
									"end": 9623,
									"name": "JUMPDEST"
								},
								{
									"begin": 9591,
									"end": 9623,
									"name": "SWAP1"
								},
								{
									"begin": 9591,
									"end": 9623,
									"name": "POP"
								},
								{
									"begin": 9638,
									"end": 9647,
									"name": "DUP1"
								},
								{
									"begin": 9629,
									"end": 9635,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9629,
									"end": 9635,
									"name": "DUP1"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "EXP"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "DUP2"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "SLOAD"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "DUP2"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "MUL"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "NOT"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "AND"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "SWAP1"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "DUP4"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "AND"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "MUL"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "OR"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "SWAP1"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "SSTORE"
								},
								{
									"begin": 9629,
									"end": 9647,
									"name": "POP"
								},
								{
									"begin": 9691,
									"end": 9700,
									"name": "DUP1"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "AND"
								},
								{
									"begin": 9687,
									"end": 9688,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "AND"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "MLOAD"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "MLOAD"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "DUP1"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "SWAP2"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "SUB"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "SWAP1"
								},
								{
									"begin": 9658,
									"end": 9701,
									"name": "LOG3"
								},
								{
									"begin": 9561,
									"end": 9706,
									"name": "POP"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "MLOAD"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "DUP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "ADD"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "MSTORE"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "DUP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "DUP2"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "MSTORE"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "ADD"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "476F6C64436F696E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "DUP2"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "MSTORE"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "POP"
								},
								{
									"begin": 11365,
									"end": 11370,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "DUP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "MLOAD"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "ADD"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP3"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP2"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "SWAP1"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "JUMPDEST"
								},
								{
									"begin": 11365,
									"end": 11383,
									"name": "POP"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "MLOAD"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "DUP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "ADD"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "MSTORE"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "DUP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "DUP2"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "MSTORE"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "ADD"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "474C430000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "DUP2"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "MSTORE"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "POP"
								},
								{
									"begin": 11389,
									"end": 11396,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "DUP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "MLOAD"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "ADD"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP3"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP2"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "SWAP1"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "JUMPDEST"
								},
								{
									"begin": 11389,
									"end": 11404,
									"name": "POP"
								},
								{
									"begin": 11422,
									"end": 11424,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11410,
									"end": 11419,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11410,
									"end": 11419,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "EXP"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "DUP2"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "SLOAD"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "DUP2"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "MUL"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "NOT"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "AND"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "SWAP1"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "DUP4"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "AND"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "MUL"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "OR"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "SWAP1"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "SSTORE"
								},
								{
									"begin": 11410,
									"end": 11424,
									"name": "POP"
								},
								{
									"begin": 11445,
									"end": 11459,
									"name": "PUSH",
									"value": "65A4DA25D3016C00000"
								},
								{
									"begin": 11430,
									"end": 11442,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11430,
									"end": 11459,
									"name": "DUP2"
								},
								{
									"begin": 11430,
									"end": 11459,
									"name": "SWAP1"
								},
								{
									"begin": 11430,
									"end": 11459,
									"name": "SSTORE"
								},
								{
									"begin": 11430,
									"end": 11459,
									"name": "POP"
								},
								{
									"begin": 11489,
									"end": 11501,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11489,
									"end": 11501,
									"name": "SLOAD"
								},
								{
									"begin": 11465,
									"end": 11474,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11475,
									"end": 11485,
									"name": "CALLER"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "AND"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "AND"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "DUP2"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "MSTORE"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "ADD"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "SWAP1"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "DUP2"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "MSTORE"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "ADD"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11465,
									"end": 11486,
									"name": "KECCAK256"
								},
								{
									"begin": 11465,
									"end": 11501,
									"name": "DUP2"
								},
								{
									"begin": 11465,
									"end": 11501,
									"name": "SWAP1"
								},
								{
									"begin": 11465,
									"end": 11501,
									"name": "SSTORE"
								},
								{
									"begin": 11465,
									"end": 11501,
									"name": "POP"
								},
								{
									"begin": 11534,
									"end": 11544,
									"name": "CALLER"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "AND"
								},
								{
									"begin": 11530,
									"end": 11531,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "AND"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11546,
									"end": 11558,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11546,
									"end": 11558,
									"name": "SLOAD"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "MLOAD"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "DUP1"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "DUP3"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "DUP2"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "MSTORE"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "ADD"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "SWAP2"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "POP"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "POP"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "MLOAD"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "DUP1"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "SWAP2"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "SUB"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "SWAP1"
								},
								{
									"begin": 11513,
									"end": 11559,
									"name": "LOG3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP"
								},
								{
									"begin": 3659,
									"end": 3749,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3659,
									"end": 3749,
									"name": "JUMPDEST"
								},
								{
									"begin": 3704,
									"end": 3719,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3734,
									"end": 3744,
									"name": "CALLER"
								},
								{
									"begin": 3727,
									"end": 3744,
									"name": "SWAP1"
								},
								{
									"begin": 3727,
									"end": 3744,
									"name": "POP"
								},
								{
									"begin": 3659,
									"end": 3749,
									"name": "SWAP1"
								},
								{
									"begin": 3659,
									"end": 3749,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SLOAD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "AND"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ISZERO"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "MUL"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SUB"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "AND"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DIV"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "MSTORE"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "KECCAK256"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DIV"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "LT"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPI"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "MLOAD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "NOT"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "AND"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP4"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "OR"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP6"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SSTORE"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP6"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SSTORE"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ISZERO"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPI"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "GT"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ISZERO"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPI"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "MLOAD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SSTORE"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "POP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "POP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "POP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP3"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "GT"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ISZERO"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPI"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP2"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SSTORE"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "POP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "ADD"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "POP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "SWAP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "JUMPDEST"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "DUP1"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "CODECOPY"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11032,
									"end": 18761,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cc6984c2b7bceb32a195bacc39e31432dab0d1ec36017a905a60c4354d3d706764736f6c63430005100032",
									".code": [
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "MSTORE"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "POP"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "LT"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "SHR"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "GT"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "GT"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMP"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMP"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "GT"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMP"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "EQ"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPI"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "JUMPDEST"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "DUP1"
										},
										{
											"begin": 11032,
											"end": 18761,
											"name": "REVERT"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMPDEST"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMPDEST"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MLOAD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ADD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP3"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SUB"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP3"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MSTORE"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP4"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MLOAD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MSTORE"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ADD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MLOAD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ADD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP4"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ADD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "AND"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ISZERO"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMPI"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP3"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SUB"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MLOAD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP4"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SUB"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "EXP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SUB"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "NOT"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "AND"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MSTORE"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "ADD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMPDEST"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP3"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "MLOAD"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "DUP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP2"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SUB"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "RETURN"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "JUMPDEST"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ADD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "AND"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ADD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP3"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ADD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP3"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "JUMPDEST"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "MLOAD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP3"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ISZERO"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ISZERO"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ISZERO"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ISZERO"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "MSTORE"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "ADD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "MLOAD"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "DUP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SUB"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP1"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "RETURN"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "JUMPDEST"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "MLOAD"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "DUP3"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "DUP2"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "MSTORE"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "ADD"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "MLOAD"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "DUP1"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "SWAP2"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "SUB"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "RETURN"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "JUMPDEST"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ADD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "AND"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ADD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP3"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "AND"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ADD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP3"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ADD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP3"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "JUMPDEST"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "MLOAD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP3"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ISZERO"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ISZERO"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ISZERO"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ISZERO"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "MSTORE"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "ADD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "MLOAD"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "DUP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP2"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SUB"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP1"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "RETURN"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "JUMPDEST"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "JUMPDEST"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "MLOAD"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "DUP1"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "DUP3"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "AND"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "AND"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "DUP2"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "MSTORE"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "ADD"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "SWAP2"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "POP"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "POP"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "MLOAD"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "DUP1"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "SWAP2"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "SUB"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "SWAP1"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "RETURN"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMPDEST"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMPDEST"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "MLOAD"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP3"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "AND"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "AND"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP2"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "MSTORE"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "ADD"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP2"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "POP"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "POP"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "MLOAD"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP2"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SUB"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "RETURN"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "JUMPDEST"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ADD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "AND"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ADD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP3"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ADD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP3"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "JUMPDEST"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "MLOAD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP3"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ISZERO"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ISZERO"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ISZERO"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ISZERO"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "MSTORE"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "ADD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "MLOAD"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "DUP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SUB"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP1"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "RETURN"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "JUMPDEST"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ADD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ADD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP3"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "JUMPDEST"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "MLOAD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP3"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ISZERO"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ISZERO"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ISZERO"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ISZERO"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "MSTORE"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "ADD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "MLOAD"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "DUP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SUB"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "RETURN"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "JUMPDEST"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "ADD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "AND"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "ADD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP3"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "JUMPDEST"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "MLOAD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP3"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "MSTORE"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "ADD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "MLOAD"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "DUP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SUB"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "RETURN"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "JUMPDEST"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "JUMPDEST"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "STOP"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "DUP3"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "AND"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "DUP2"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "MSTORE"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "ADD"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "POP"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "MLOAD"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "DUP1"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "SWAP2"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "SUB"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "RETURN"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "JUMPDEST"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "JUMPDEST"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "MLOAD"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "DUP1"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "DUP3"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "AND"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "AND"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "DUP2"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "MSTORE"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "ADD"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "SWAP2"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "POP"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "POP"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "MLOAD"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "DUP1"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "SWAP2"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "SUB"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "SWAP1"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "RETURN"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMPDEST"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMPDEST"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MLOAD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ADD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP3"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SUB"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP3"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MSTORE"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP4"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MLOAD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MSTORE"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ADD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MLOAD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ADD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP4"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ADD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "AND"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ISZERO"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMPI"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP3"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SUB"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MLOAD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP4"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SUB"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "EXP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SUB"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "NOT"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "AND"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MSTORE"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "ADD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMPDEST"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP3"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "MLOAD"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "DUP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP2"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SUB"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "RETURN"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "JUMPDEST"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ADD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ADD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP3"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "JUMPDEST"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "MLOAD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP3"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ISZERO"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ISZERO"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ISZERO"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ISZERO"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "MSTORE"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "ADD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "MLOAD"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "DUP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SUB"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "RETURN"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "JUMPDEST"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ADD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "AND"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ADD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP3"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ADD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP3"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "JUMPDEST"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "MLOAD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP3"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ISZERO"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ISZERO"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ISZERO"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ISZERO"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "MSTORE"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "ADD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "MLOAD"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "DUP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SUB"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP1"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "RETURN"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "AND"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP3"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP3"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "JUMPDEST"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP3"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ISZERO"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ISZERO"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ISZERO"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ISZERO"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "MSTORE"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "ADD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "MLOAD"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "DUP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SUB"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP1"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "RETURN"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ISZERO"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPI"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "EXP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "NOT"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "RETURN"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ISZERO"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPI"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "EXP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "NOT"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "RETURN"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "JUMPDEST"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "AND"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP3"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "AND"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP3"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "JUMPDEST"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "MLOAD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP3"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "MSTORE"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "ADD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "MLOAD"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "DUP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SUB"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP1"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "RETURN"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "DUP2"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "DUP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "AND"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "ADD"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP3"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP2"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "SWAP1"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "STOP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMPDEST"
										},
										{
											"begin": 12047,
											"end": 12060,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SLOAD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "AND"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ISZERO"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MUL"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SUB"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "AND"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DIV"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DIV"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MUL"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MLOAD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP3"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SLOAD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "AND"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ISZERO"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MUL"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SUB"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "AND"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DIV"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ISZERO"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPI"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "LT"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPI"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP4"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SLOAD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DIV"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MUL"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP4"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "KECCAK256"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SLOAD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "MSTORE"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP4"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "GT"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPI"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SUB"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "AND"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "DUP3"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "ADD"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP2"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "JUMPDEST"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "SWAP1"
										},
										{
											"begin": 12068,
											"end": 12080,
											"name": "POP"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "SWAP1"
										},
										{
											"begin": 12008,
											"end": 12085,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "JUMPDEST"
										},
										{
											"begin": 13071,
											"end": 13075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13122,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13092,
											"end": 13102,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "JUMPDEST"
										},
										{
											"begin": 13106,
											"end": 13113,
											"name": "DUP5"
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "DUP5"
										},
										{
											"begin": 13083,
											"end": 13091,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13083,
											"end": 13122,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13083,
											"end": 13122,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 13083,
											"end": 13122,
											"name": "JUMPDEST"
										},
										{
											"begin": 13135,
											"end": 13139,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13128,
											"end": 13139,
											"name": "SWAP1"
										},
										{
											"begin": 13128,
											"end": 13139,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP3"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "SWAP2"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "POP"
										},
										{
											"begin": 13003,
											"end": 13144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "JUMPDEST"
										},
										{
											"begin": 12182,
											"end": 12189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12204,
											"end": 12216,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12204,
											"end": 12216,
											"name": "SLOAD"
										},
										{
											"begin": 12197,
											"end": 12216,
											"name": "SWAP1"
										},
										{
											"begin": 12197,
											"end": 12216,
											"name": "POP"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "SWAP1"
										},
										{
											"begin": 12136,
											"end": 12221,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "JUMPDEST"
										},
										{
											"begin": 13666,
											"end": 13670,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13678,
											"end": 13714,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 13688,
											"end": 13694,
											"name": "DUP5"
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP5"
										},
										{
											"begin": 13707,
											"end": 13713,
											"name": "DUP5"
										},
										{
											"begin": 13678,
											"end": 13687,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13678,
											"end": 13714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13678,
											"end": 13714,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 13678,
											"end": 13714,
											"name": "JUMPDEST"
										},
										{
											"begin": 13720,
											"end": 13841,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 13729,
											"end": 13735,
											"name": "DUP5"
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 13737,
											"end": 13747,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "JUMPDEST"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 13789,
											"end": 13795,
											"name": "DUP6"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "MLOAD"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "DUP1"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "DUP1"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "SWAP2"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "CODECOPY"
										},
										{
											"begin": 13751,
											"end": 13762,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13769,
											"name": "DUP12"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "SWAP1"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13770,
											"name": "KECCAK256"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13771,
											"end": 13783,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13771,
											"end": 13781,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13771,
											"end": 13783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13771,
											"end": 13783,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13771,
											"end": 13783,
											"name": "JUMPDEST"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "SWAP1"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "DUP2"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "MSTORE"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "ADD"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "KECCAK256"
										},
										{
											"begin": 13751,
											"end": 13784,
											"name": "SLOAD"
										},
										{
											"begin": 13751,
											"end": 13788,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 13751,
											"end": 13788,
											"name": "SWAP1"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "SWAP3"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "SWAP2"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "SWAP1"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "AND"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 13751,
											"end": 13840,
											"name": "JUMPDEST"
										},
										{
											"begin": 13720,
											"end": 13728,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13720,
											"end": 13841,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13720,
											"end": 13841,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 13720,
											"end": 13841,
											"name": "JUMPDEST"
										},
										{
											"begin": 13854,
											"end": 13858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13847,
											"end": 13858,
											"name": "SWAP1"
										},
										{
											"begin": 13847,
											"end": 13858,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP4"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "SWAP3"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "POP"
										},
										{
											"begin": 13575,
											"end": 13863,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "JUMPDEST"
										},
										{
											"begin": 11793,
											"end": 11798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "SWAP1"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "SLOAD"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "SWAP1"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "EXP"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "SWAP1"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "DIV"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "AND"
										},
										{
											"begin": 11806,
											"end": 11822,
											"name": "SWAP1"
										},
										{
											"begin": 11806,
											"end": 11822,
											"name": "POP"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "SWAP1"
										},
										{
											"begin": 11750,
											"end": 11827,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMPDEST"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SLOAD"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "EXP"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DIV"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "AND"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP2"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "JUMPDEST"
										},
										{
											"begin": 14311,
											"end": 14315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14323,
											"end": 14406,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14332,
											"end": 14344,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 14332,
											"end": 14342,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14332,
											"end": 14344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14332,
											"end": 14344,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 14332,
											"end": 14344,
											"name": "JUMPDEST"
										},
										{
											"begin": 14346,
											"end": 14353,
											"name": "DUP5"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 14394,
											"end": 14404,
											"name": "DUP6"
										},
										{
											"begin": 14355,
											"end": 14366,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14379,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14367,
											"end": 14377,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14367,
											"end": 14379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14367,
											"end": 14379,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14367,
											"end": 14379,
											"name": "JUMPDEST"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "AND"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "AND"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "DUP2"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "MSTORE"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "ADD"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "SWAP1"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "DUP2"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "MSTORE"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "ADD"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14380,
											"name": "KECCAK256"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14381,
											"end": 14388,
											"name": "DUP10"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "AND"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "AND"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "DUP2"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "MSTORE"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "ADD"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "SWAP1"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "DUP2"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "MSTORE"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "ADD"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "KECCAK256"
										},
										{
											"begin": 14355,
											"end": 14389,
											"name": "SLOAD"
										},
										{
											"begin": 14355,
											"end": 14393,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14355,
											"end": 14393,
											"name": "SWAP1"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "SWAP2"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "SWAP1"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "AND"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 14355,
											"end": 14405,
											"name": "JUMPDEST"
										},
										{
											"begin": 14323,
											"end": 14331,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14323,
											"end": 14406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14323,
											"end": 14406,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 14323,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14419,
											"end": 14423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "SWAP1"
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP3"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "SWAP2"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "POP"
										},
										{
											"begin": 14231,
											"end": 14428,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "JUMPDEST"
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 15583,
											"end": 15595,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 15583,
											"end": 15593,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15583,
											"end": 15595,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15583,
											"end": 15595,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 15583,
											"end": 15595,
											"name": "JUMPDEST"
										},
										{
											"begin": 15597,
											"end": 15603,
											"name": "DUP4"
										},
										{
											"begin": 15577,
											"end": 15582,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 15577,
											"end": 15604,
											"name": "JUMPDEST"
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15610,
											"end": 15621,
											"name": "SWAP1"
										},
										{
											"begin": 15610,
											"end": 15621,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP2"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "SWAP1"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "POP"
										},
										{
											"begin": 15519,
											"end": 15626,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "JUMPDEST"
										},
										{
											"begin": 12329,
											"end": 12336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12360,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12361,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "AND"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "AND"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "DUP2"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "MSTORE"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "ADD"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "SWAP1"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "DUP2"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "MSTORE"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "ADD"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "KECCAK256"
										},
										{
											"begin": 12351,
											"end": 12369,
											"name": "SLOAD"
										},
										{
											"begin": 12344,
											"end": 12369,
											"name": "SWAP1"
										},
										{
											"begin": 12344,
											"end": 12369,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP2"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "SWAP1"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "POP"
										},
										{
											"begin": 12270,
											"end": 12374,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "JUMPDEST"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 9970,
											"end": 9980,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMPDEST"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SLOAD"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "EXP"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DIV"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "EQ"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPI"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "REVERT"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPDEST"
										},
										{
											"begin": 10451,
											"end": 10452,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "AND"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "DUP1"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "SWAP1"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "SLOAD"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "SWAP1"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "EXP"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "SWAP1"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "DIV"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "AND"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "AND"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "MLOAD"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "MLOAD"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "DUP1"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "SWAP2"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "SUB"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "SWAP1"
										},
										{
											"begin": 10414,
											"end": 10454,
											"name": "LOG3"
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DUP1"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "EXP"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "DUP2"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "SLOAD"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "DUP2"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "MUL"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "NOT"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "AND"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "SWAP1"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "DUP4"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "AND"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "MUL"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "OR"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "SWAP1"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "SSTORE"
										},
										{
											"begin": 10460,
											"end": 10479,
											"name": "POP"
										},
										{
											"begin": 10357,
											"end": 10484,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "JUMPDEST"
										},
										{
											"begin": 11662,
											"end": 11669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11684,
											"end": 11691,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 11684,
											"end": 11689,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11684,
											"end": 11691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11684,
											"end": 11691,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 11684,
											"end": 11691,
											"name": "JUMPDEST"
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "SWAP1"
										},
										{
											"begin": 11677,
											"end": 11691,
											"name": "POP"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "SWAP1"
										},
										{
											"begin": 11619,
											"end": 11696,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "JUMPDEST"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DUP1"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "SWAP1"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "SLOAD"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "SWAP1"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "EXP"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "SWAP1"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DIV"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "AND"
										},
										{
											"begin": 9827,
											"end": 9840,
											"name": "SWAP1"
										},
										{
											"begin": 9827,
											"end": 9840,
											"name": "POP"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "SWAP1"
										},
										{
											"begin": 9774,
											"end": 9845,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMPDEST"
										},
										{
											"begin": 11920,
											"end": 11933,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SLOAD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "AND"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ISZERO"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MUL"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SUB"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "AND"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DIV"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DIV"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MUL"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MLOAD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MSTORE"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP3"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MSTORE"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP3"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SLOAD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "AND"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ISZERO"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MUL"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SUB"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "AND"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DIV"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ISZERO"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPI"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "LT"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPI"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP4"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SLOAD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DIV"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MUL"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP4"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MSTORE"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPDEST"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP3"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MSTORE"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "KECCAK256"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPDEST"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SLOAD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "MSTORE"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP4"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "GT"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPI"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP3"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SUB"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "AND"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "DUP3"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "ADD"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP2"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "JUMPDEST"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "SWAP1"
										},
										{
											"begin": 11941,
											"end": 11955,
											"name": "POP"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "SWAP1"
										},
										{
											"begin": 11879,
											"end": 11960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "JUMPDEST"
										},
										{
											"begin": 15378,
											"end": 15382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 9970,
											"end": 9980,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMPDEST"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SLOAD"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "EXP"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DIV"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "EQ"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPI"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "REVERT"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPDEST"
										},
										{
											"begin": 15390,
											"end": 15417,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 15396,
											"end": 15408,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15396,
											"end": 15406,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15396,
											"end": 15408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15396,
											"end": 15408,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 15396,
											"end": 15408,
											"name": "JUMPDEST"
										},
										{
											"begin": 15410,
											"end": 15416,
											"name": "DUP4"
										},
										{
											"begin": 15390,
											"end": 15395,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15390,
											"end": 15417,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15390,
											"end": 15417,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 15390,
											"end": 15417,
											"name": "JUMPDEST"
										},
										{
											"begin": 15430,
											"end": 15434,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15423,
											"end": 15434,
											"name": "SWAP1"
										},
										{
											"begin": 15423,
											"end": 15434,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP2"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "SWAP1"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "POP"
										},
										{
											"begin": 15322,
											"end": 15439,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "JUMPDEST"
										},
										{
											"begin": 14969,
											"end": 14973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14981,
											"end": 15110,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 14990,
											"end": 15002,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 14990,
											"end": 15000,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14990,
											"end": 15002,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14990,
											"end": 15002,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 14990,
											"end": 15002,
											"name": "JUMPDEST"
										},
										{
											"begin": 15004,
											"end": 15011,
											"name": "DUP5"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15052,
											"end": 15067,
											"name": "DUP6"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "MLOAD"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "DUP1"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "DUP1"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "DUP2"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "SWAP2"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "CODECOPY"
										},
										{
											"begin": 15013,
											"end": 15024,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15025,
											"end": 15037,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15025,
											"end": 15035,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15025,
											"end": 15037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15025,
											"end": 15037,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15025,
											"end": 15037,
											"name": "JUMPDEST"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "AND"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "AND"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "DUP2"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "SWAP1"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "DUP2"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15038,
											"name": "KECCAK256"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15046,
											"name": "DUP11"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "AND"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "AND"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "DUP2"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "SWAP1"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "DUP2"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "MSTORE"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "ADD"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "KECCAK256"
										},
										{
											"begin": 15013,
											"end": 15047,
											"name": "SLOAD"
										},
										{
											"begin": 15013,
											"end": 15051,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15013,
											"end": 15051,
											"name": "SWAP1"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "SWAP3"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "SWAP2"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "SWAP1"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "AND"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15013,
											"end": 15109,
											"name": "JUMPDEST"
										},
										{
											"begin": 14981,
											"end": 14989,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14981,
											"end": 15110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14981,
											"end": 15110,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 14981,
											"end": 15110,
											"name": "JUMPDEST"
										},
										{
											"begin": 15123,
											"end": 15127,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15116,
											"end": 15127,
											"name": "SWAP1"
										},
										{
											"begin": 15116,
											"end": 15127,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP3"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "SWAP2"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "POP"
										},
										{
											"begin": 14884,
											"end": 15132,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "JUMPDEST"
										},
										{
											"begin": 12629,
											"end": 12633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12641,
											"end": 12683,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12651,
											"end": 12663,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12651,
											"end": 12661,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 12651,
											"end": 12663,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12651,
											"end": 12663,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12651,
											"end": 12663,
											"name": "JUMPDEST"
										},
										{
											"begin": 12665,
											"end": 12674,
											"name": "DUP5"
										},
										{
											"begin": 12676,
											"end": 12682,
											"name": "DUP5"
										},
										{
											"begin": 12641,
											"end": 12650,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 12641,
											"end": 12683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12641,
											"end": 12683,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 12641,
											"end": 12683,
											"name": "JUMPDEST"
										},
										{
											"begin": 12696,
											"end": 12700,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12689,
											"end": 12700,
											"name": "SWAP1"
										},
										{
											"begin": 12689,
											"end": 12700,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP3"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "SWAP2"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "POP"
										},
										{
											"begin": 12558,
											"end": 12705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ISZERO"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MUL"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DIV"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DIV"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MUL"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ISZERO"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MUL"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DIV"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ISZERO"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPI"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "LT"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPI"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DIV"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MUL"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "KECCAK256"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SLOAD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "MSTORE"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP4"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "GT"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPI"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP1"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SUB"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "AND"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP3"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "ADD"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "SWAP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMPDEST"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "POP"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "DUP2"
										},
										{
											"begin": 11289,
											"end": 11310,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ISZERO"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MUL"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DIV"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DIV"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MUL"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ISZERO"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MUL"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DIV"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ISZERO"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPI"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "LT"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPI"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DIV"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MUL"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "KECCAK256"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SLOAD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "MSTORE"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP4"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "GT"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPI"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP1"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SUB"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "AND"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP3"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "ADD"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "SWAP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMPDEST"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "POP"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "DUP2"
										},
										{
											"begin": 11314,
											"end": 11333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "JUMPDEST"
										},
										{
											"begin": 12828,
											"end": 12835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12861,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12867,
											"name": "DUP5"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "AND"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "AND"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "DUP2"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "MSTORE"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "ADD"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "SWAP1"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "DUP2"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "MSTORE"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "ADD"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12868,
											"name": "KECCAK256"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12876,
											"name": "DUP4"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "AND"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "AND"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "DUP2"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "MSTORE"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "ADD"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "SWAP1"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "DUP2"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "MSTORE"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "ADD"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "KECCAK256"
										},
										{
											"begin": 12850,
											"end": 12877,
											"name": "SLOAD"
										},
										{
											"begin": 12843,
											"end": 12877,
											"name": "SWAP1"
										},
										{
											"begin": 12843,
											"end": 12877,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP3"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "SWAP2"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "POP"
										},
										{
											"begin": 12754,
											"end": 12882,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "JUMPDEST"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 9970,
											"end": 9980,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 9970,
											"end": 9982,
											"name": "JUMPDEST"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DUP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SLOAD"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "EXP"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "SWAP1"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "DIV"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9966,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "AND"
										},
										{
											"begin": 9960,
											"end": 9982,
											"name": "EQ"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPI"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP3"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MSTORE"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "ADD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "POP"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "MLOAD"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "DUP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP2"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SUB"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "SWAP1"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "REVERT"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 9952,
											"end": 10019,
											"name": "JUMPDEST"
										},
										{
											"begin": 10691,
											"end": 10719,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 10710,
											"end": 10718,
											"name": "DUP2"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 10691,
											"end": 10719,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10691,
											"end": 10719,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 10691,
											"end": 10719,
											"name": "JUMPDEST"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "POP"
										},
										{
											"begin": 10623,
											"end": 10724,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3659,
											"end": 3749,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3659,
											"end": 3749,
											"name": "JUMPDEST"
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "CALLER"
										},
										{
											"begin": 3727,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3727,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3749,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3749,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "JUMPDEST"
										},
										{
											"begin": 18168,
											"end": 18169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "AND"
										},
										{
											"begin": 18151,
											"end": 18156,
											"name": "DUP4"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "AND"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "EQ"
										},
										{
											"begin": 18151,
											"end": 18170,
											"name": "ISZERO"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "JUMPI"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "MLOAD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "MSTORE"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "ADD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP1"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP1"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "ADD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP3"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SUB"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP3"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "MSTORE"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "MSTORE"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "ADD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP1"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SWAP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "CODECOPY"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "ADD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SWAP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "POP"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "POP"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "MLOAD"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "DUP1"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SWAP2"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SUB"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "SWAP1"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "REVERT"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 18143,
											"end": 18211,
											"name": "JUMPDEST"
										},
										{
											"begin": 18244,
											"end": 18245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "AND"
										},
										{
											"begin": 18225,
											"end": 18232,
											"name": "DUP3"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "AND"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "EQ"
										},
										{
											"begin": 18225,
											"end": 18246,
											"name": "ISZERO"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "JUMPI"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "MLOAD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "MSTORE"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "ADD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "ADD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP3"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SUB"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP3"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "MSTORE"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "MSTORE"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "ADD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SWAP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "CODECOPY"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "ADD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SWAP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "POP"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "POP"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "MLOAD"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SWAP2"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SUB"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "SWAP1"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "REVERT"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 18217,
											"end": 18285,
											"name": "JUMPDEST"
										},
										{
											"begin": 18322,
											"end": 18328,
											"name": "DUP1"
										},
										{
											"begin": 18292,
											"end": 18303,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18304,
											"end": 18309,
											"name": "DUP6"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "AND"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "AND"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "DUP2"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "MSTORE"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "ADD"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "SWAP1"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "DUP2"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "MSTORE"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "ADD"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18292,
											"end": 18310,
											"name": "KECCAK256"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18311,
											"end": 18318,
											"name": "DUP5"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "AND"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "AND"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "DUP2"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "MSTORE"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "ADD"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "SWAP1"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "DUP2"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "MSTORE"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "ADD"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18292,
											"end": 18319,
											"name": "KECCAK256"
										},
										{
											"begin": 18292,
											"end": 18328,
											"name": "DUP2"
										},
										{
											"begin": 18292,
											"end": 18328,
											"name": "SWAP1"
										},
										{
											"begin": 18292,
											"end": 18328,
											"name": "SSTORE"
										},
										{
											"begin": 18292,
											"end": 18328,
											"name": "POP"
										},
										{
											"begin": 18355,
											"end": 18362,
											"name": "DUP2"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "AND"
										},
										{
											"begin": 18348,
											"end": 18353,
											"name": "DUP4"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "AND"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18364,
											"end": 18370,
											"name": "DUP4"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "MLOAD"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "DUP1"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "DUP3"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "DUP2"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "MSTORE"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "ADD"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "SWAP2"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "POP"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "POP"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "MLOAD"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "DUP1"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "SWAP2"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "SUB"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "SWAP1"
										},
										{
											"begin": 18339,
											"end": 18371,
											"name": "LOG3"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "POP"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "POP"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "POP"
										},
										{
											"begin": 18062,
											"end": 18376,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "JUMPDEST"
										},
										{
											"begin": 16181,
											"end": 16182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "AND"
										},
										{
											"begin": 16163,
											"end": 16169,
											"name": "DUP4"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "AND"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "EQ"
										},
										{
											"begin": 16163,
											"end": 16183,
											"name": "ISZERO"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "JUMPI"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "MLOAD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "MSTORE"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "ADD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP1"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP1"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "ADD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP3"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SUB"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP3"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "MSTORE"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "MSTORE"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "ADD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP1"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SWAP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "CODECOPY"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "ADD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SWAP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "POP"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "POP"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "MLOAD"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "DUP1"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SWAP2"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SUB"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "SWAP1"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "REVERT"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16155,
											"end": 16225,
											"name": "JUMPDEST"
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "AND"
										},
										{
											"begin": 16239,
											"end": 16248,
											"name": "DUP3"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "AND"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "EQ"
										},
										{
											"begin": 16239,
											"end": 16262,
											"name": "ISZERO"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "JUMPI"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "MLOAD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "MSTORE"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "ADD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP1"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP1"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "ADD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP3"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SUB"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP3"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "MSTORE"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "MSTORE"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "ADD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP1"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SWAP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "CODECOPY"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "ADD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SWAP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "POP"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "POP"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "MLOAD"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "DUP1"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SWAP2"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SUB"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "SWAP1"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "REVERT"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16231,
											"end": 16302,
											"name": "JUMPDEST"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16351,
											"end": 16357,
											"name": "DUP2"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "MLOAD"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "DUP1"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "ADD"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "MSTORE"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "DUP1"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "DUP2"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "MSTORE"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "ADD"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "SWAP2"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "CODECOPY"
										},
										{
											"begin": 16329,
											"end": 16338,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16339,
											"end": 16345,
											"name": "DUP8"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "AND"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "AND"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "DUP2"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "MSTORE"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "ADD"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "SWAP1"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "DUP2"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "MSTORE"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "ADD"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "KECCAK256"
										},
										{
											"begin": 16329,
											"end": 16346,
											"name": "SLOAD"
										},
										{
											"begin": 16329,
											"end": 16350,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 16329,
											"end": 16350,
											"name": "SWAP1"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "SWAP3"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "SWAP2"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "SWAP1"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "AND"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16329,
											"end": 16400,
											"name": "JUMPDEST"
										},
										{
											"begin": 16309,
											"end": 16318,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP6"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "AND"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "AND"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "DUP2"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "MSTORE"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "ADD"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "SWAP1"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "DUP2"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "MSTORE"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "ADD"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16309,
											"end": 16326,
											"name": "KECCAK256"
										},
										{
											"begin": 16309,
											"end": 16400,
											"name": "DUP2"
										},
										{
											"begin": 16309,
											"end": 16400,
											"name": "SWAP1"
										},
										{
											"begin": 16309,
											"end": 16400,
											"name": "SSTORE"
										},
										{
											"begin": 16309,
											"end": 16400,
											"name": "POP"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 16454,
											"end": 16460,
											"name": "DUP2"
										},
										{
											"begin": 16429,
											"end": 16438,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16439,
											"end": 16448,
											"name": "DUP6"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "AND"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "AND"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "DUP2"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "MSTORE"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "ADD"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "SWAP1"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "DUP2"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "MSTORE"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "ADD"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "KECCAK256"
										},
										{
											"begin": 16429,
											"end": 16449,
											"name": "SLOAD"
										},
										{
											"begin": 16429,
											"end": 16453,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16429,
											"end": 16453,
											"name": "SWAP1"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "SWAP2"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "SWAP1"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "AND"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16429,
											"end": 16461,
											"name": "JUMPDEST"
										},
										{
											"begin": 16406,
											"end": 16415,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16416,
											"end": 16425,
											"name": "DUP5"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "AND"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "AND"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "DUP2"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "MSTORE"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "ADD"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "SWAP1"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "DUP2"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "MSTORE"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "ADD"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16406,
											"end": 16426,
											"name": "KECCAK256"
										},
										{
											"begin": 16406,
											"end": 16461,
											"name": "DUP2"
										},
										{
											"begin": 16406,
											"end": 16461,
											"name": "SWAP1"
										},
										{
											"begin": 16406,
											"end": 16461,
											"name": "SSTORE"
										},
										{
											"begin": 16406,
											"end": 16461,
											"name": "POP"
										},
										{
											"begin": 16489,
											"end": 16498,
											"name": "DUP2"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "AND"
										},
										{
											"begin": 16481,
											"end": 16487,
											"name": "DUP4"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "AND"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16500,
											"end": 16506,
											"name": "DUP4"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "MLOAD"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "DUP1"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "DUP3"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "DUP2"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "MSTORE"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "ADD"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "SWAP2"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "POP"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "POP"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "MLOAD"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "DUP1"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "SWAP2"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "SUB"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "SWAP1"
										},
										{
											"begin": 16472,
											"end": 16507,
											"name": "LOG3"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "POP"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "POP"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "POP"
										},
										{
											"begin": 16070,
											"end": 16512,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "JUMPDEST"
										},
										{
											"begin": 5642,
											"end": 5649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "DUP4"
										},
										{
											"begin": 5665,
											"end": 5666,
											"name": "DUP4"
										},
										{
											"begin": 5665,
											"end": 5671,
											"name": "GT"
										},
										{
											"begin": 5665,
											"end": 5671,
											"name": "ISZERO"
										},
										{
											"begin": 5673,
											"end": 5685,
											"name": "DUP3"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "JUMPI"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MLOAD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP3"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SUB"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP3"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP4"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MLOAD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MLOAD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP4"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "AND"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ISZERO"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "JUMPI"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP3"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SUB"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MLOAD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP4"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SUB"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "EXP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SUB"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "NOT"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "AND"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MSTORE"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "ADD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "JUMPDEST"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP3"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "MLOAD"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "DUP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP2"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SUB"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "SWAP1"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "REVERT"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "JUMPDEST"
										},
										{
											"begin": 5657,
											"end": 5686,
											"name": "POP"
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "DUP4"
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "DUP6"
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "SUB"
										},
										{
											"begin": 5692,
											"end": 5709,
											"name": "SWAP1"
										},
										{
											"begin": 5692,
											"end": 5709,
											"name": "POP"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "DUP1"
										},
										{
											"begin": 5716,
											"end": 5724,
											"name": "SWAP2"
										},
										{
											"begin": 5716,
											"end": 5724,
											"name": "POP"
										},
										{
											"begin": 5716,
											"end": 5724,
											"name": "POP"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "SWAP4"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "SWAP3"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "POP"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "POP"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "POP"
										},
										{
											"begin": 5556,
											"end": 5729,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "JUMPDEST"
										},
										{
											"begin": 4816,
											"end": 4823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4840,
											"name": "DUP1"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP3"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "DUP5"
										},
										{
											"begin": 4843,
											"end": 4848,
											"name": "ADD"
										},
										{
											"begin": 4831,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4831,
											"end": 4848,
											"name": "POP"
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP4"
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "DUP2"
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "LT"
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "ISZERO"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "JUMPI"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MLOAD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MSTORE"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "ADD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP1"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP1"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "ADD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP3"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "SUB"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP3"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MSTORE"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MSTORE"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "ADD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP1"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MSTORE"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "POP"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "ADD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "SWAP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "POP"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "POP"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "MLOAD"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "DUP1"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "SWAP2"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "SUB"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "SWAP1"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "REVERT"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 4854,
											"end": 4900,
											"name": "JUMPDEST"
										},
										{
											"begin": 4914,
											"end": 4915,
											"name": "DUP1"
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "SWAP2"
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "POP"
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "POP"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "SWAP3"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "SWAP2"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "POP"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "POP"
										},
										{
											"begin": 4758,
											"end": 4920,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17341,
											"end": 17665,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17341,
											"end": 17665,
											"name": "JUMPDEST"
										},
										{
											"begin": 17431,
											"end": 17432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "AND"
										},
										{
											"begin": 17412,
											"end": 17419,
											"name": "DUP3"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "AND"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "EQ"
										},
										{
											"begin": 17412,
											"end": 17433,
											"name": "ISZERO"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "JUMPI"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "MLOAD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "MSTORE"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "ADD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP1"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP1"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "ADD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP3"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SUB"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP3"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "MSTORE"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "MSTORE"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "ADD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP1"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SWAP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "CODECOPY"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "ADD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SWAP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "POP"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "POP"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "MLOAD"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "DUP1"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SWAP2"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SUB"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "SWAP1"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "REVERT"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17404,
											"end": 17471,
											"name": "JUMPDEST"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 17522,
											"end": 17528,
											"name": "DUP2"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "MLOAD"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "DUP1"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "ADD"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "MSTORE"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "DUP1"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "DUP2"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "MSTORE"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "ADD"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "SWAP2"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "CODECOPY"
										},
										{
											"begin": 17499,
											"end": 17508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17509,
											"end": 17516,
											"name": "DUP7"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "AND"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "AND"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "DUP2"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "MSTORE"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "ADD"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "SWAP1"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "DUP2"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "MSTORE"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "ADD"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "KECCAK256"
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "SLOAD"
										},
										{
											"begin": 17499,
											"end": 17521,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 17499,
											"end": 17521,
											"name": "SWAP1"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "SWAP3"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "SWAP2"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "SWAP1"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "AND"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 17499,
											"end": 17567,
											"name": "JUMPDEST"
										},
										{
											"begin": 17478,
											"end": 17487,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17488,
											"end": 17495,
											"name": "DUP5"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "AND"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "AND"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "DUP2"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "MSTORE"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "ADD"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "SWAP1"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "DUP2"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "MSTORE"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "ADD"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17478,
											"end": 17496,
											"name": "KECCAK256"
										},
										{
											"begin": 17478,
											"end": 17567,
											"name": "DUP2"
										},
										{
											"begin": 17478,
											"end": 17567,
											"name": "SWAP1"
										},
										{
											"begin": 17478,
											"end": 17567,
											"name": "SSTORE"
										},
										{
											"begin": 17478,
											"end": 17567,
											"name": "POP"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 17605,
											"end": 17611,
											"name": "DUP2"
										},
										{
											"begin": 17588,
											"end": 17600,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17588,
											"end": 17600,
											"name": "SLOAD"
										},
										{
											"begin": 17588,
											"end": 17604,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 17588,
											"end": 17604,
											"name": "SWAP1"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "SWAP2"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "SWAP1"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "AND"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 17588,
											"end": 17612,
											"name": "JUMPDEST"
										},
										{
											"begin": 17573,
											"end": 17585,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17573,
											"end": 17612,
											"name": "DUP2"
										},
										{
											"begin": 17573,
											"end": 17612,
											"name": "SWAP1"
										},
										{
											"begin": 17573,
											"end": 17612,
											"name": "SSTORE"
										},
										{
											"begin": 17573,
											"end": 17612,
											"name": "POP"
										},
										{
											"begin": 17649,
											"end": 17650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "AND"
										},
										{
											"begin": 17632,
											"end": 17639,
											"name": "DUP3"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "AND"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17653,
											"end": 17659,
											"name": "DUP4"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "MLOAD"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "DUP1"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "DUP3"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "DUP2"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "MSTORE"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "ADD"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "SWAP2"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "POP"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "POP"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "MLOAD"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "DUP1"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "SWAP2"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "SUB"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "SWAP1"
										},
										{
											"begin": 17623,
											"end": 17660,
											"name": "LOG3"
										},
										{
											"begin": 17341,
											"end": 17665,
											"name": "POP"
										},
										{
											"begin": 17341,
											"end": 17665,
											"name": "POP"
										},
										{
											"begin": 17341,
											"end": 17665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16762,
											"end": 17046,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 16762,
											"end": 17046,
											"name": "JUMPDEST"
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "AND"
										},
										{
											"begin": 16833,
											"end": 16840,
											"name": "DUP3"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "AND"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "EQ"
										},
										{
											"begin": 16833,
											"end": 16854,
											"name": "ISZERO"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "JUMPI"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MLOAD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MSTORE"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "ADD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP1"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP1"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "ADD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP3"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "SUB"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP3"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MSTORE"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MSTORE"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "ADD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP1"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MSTORE"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "POP"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "ADD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "SWAP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "POP"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "POP"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "MLOAD"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "DUP1"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "SWAP2"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "SUB"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "SWAP1"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "REVERT"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 16825,
											"end": 16890,
											"name": "JUMPDEST"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 16929,
											"end": 16935,
											"name": "DUP2"
										},
										{
											"begin": 16912,
											"end": 16924,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16912,
											"end": 16924,
											"name": "SLOAD"
										},
										{
											"begin": 16912,
											"end": 16928,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16912,
											"end": 16928,
											"name": "SWAP1"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "SWAP2"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "SWAP1"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "AND"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 16912,
											"end": 16936,
											"name": "JUMPDEST"
										},
										{
											"begin": 16897,
											"end": 16909,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16897,
											"end": 16936,
											"name": "DUP2"
										},
										{
											"begin": 16897,
											"end": 16936,
											"name": "SWAP1"
										},
										{
											"begin": 16897,
											"end": 16936,
											"name": "SSTORE"
										},
										{
											"begin": 16897,
											"end": 16936,
											"name": "POP"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 16986,
											"end": 16992,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 16972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16980,
											"name": "DUP6"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "MSTORE"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "ADD"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "MSTORE"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "ADD"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "KECCAK256"
										},
										{
											"begin": 16963,
											"end": 16981,
											"name": "SLOAD"
										},
										{
											"begin": 16963,
											"end": 16985,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16963,
											"end": 16985,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "SWAP2"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 16963,
											"end": 16993,
											"name": "JUMPDEST"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16952,
											"end": 16959,
											"name": "DUP5"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "AND"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "AND"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "DUP2"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "MSTORE"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "ADD"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "SWAP1"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "DUP2"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "MSTORE"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "ADD"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16942,
											"end": 16960,
											"name": "KECCAK256"
										},
										{
											"begin": 16942,
											"end": 16993,
											"name": "DUP2"
										},
										{
											"begin": 16942,
											"end": 16993,
											"name": "SWAP1"
										},
										{
											"begin": 16942,
											"end": 16993,
											"name": "SSTORE"
										},
										{
											"begin": 16942,
											"end": 16993,
											"name": "POP"
										},
										{
											"begin": 17025,
											"end": 17032,
											"name": "DUP2"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "AND"
										},
										{
											"begin": 17021,
											"end": 17022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "AND"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17034,
											"end": 17040,
											"name": "DUP4"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "MLOAD"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "DUP1"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "DUP3"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "DUP2"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "MSTORE"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "ADD"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "SWAP2"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "POP"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "POP"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "MLOAD"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "DUP1"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "SWAP2"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "SUB"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "SWAP1"
										},
										{
											"begin": 17004,
											"end": 17041,
											"name": "LOG3"
										},
										{
											"begin": 16762,
											"end": 17046,
											"name": "POP"
										},
										{
											"begin": 16762,
											"end": 17046,
											"name": "POP"
										},
										{
											"begin": 16762,
											"end": 17046,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10817,
											"end": 11028,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 10817,
											"end": 11028,
											"name": "JUMPDEST"
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "AND"
										},
										{
											"begin": 10886,
											"end": 10894,
											"name": "DUP2"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "AND"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "EQ"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "ISZERO"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "JUMPI"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "MLOAD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "MSTORE"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "ADD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP1"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP1"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "ADD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP3"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SUB"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP3"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "MSTORE"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "MSTORE"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "ADD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP1"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SWAP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "CODECOPY"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "ADD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SWAP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "POP"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "POP"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "MLOAD"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "DUP1"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SWAP2"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SUB"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "SWAP1"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "REVERT"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 10878,
											"end": 10951,
											"name": "JUMPDEST"
										},
										{
											"begin": 10991,
											"end": 10999,
											"name": "DUP1"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "AND"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "DUP1"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "SWAP1"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "SLOAD"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "SWAP1"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "EXP"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "SWAP1"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "DIV"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "AND"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "AND"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "MLOAD"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "MLOAD"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "DUP1"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "SWAP2"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "SUB"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "SWAP1"
										},
										{
											"begin": 10962,
											"end": 11000,
											"name": "LOG3"
										},
										{
											"begin": 11015,
											"end": 11023,
											"name": "DUP1"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11006,
											"end": 11012,
											"name": "DUP1"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "EXP"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "DUP2"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "SLOAD"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "DUP2"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "MUL"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "NOT"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "AND"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "SWAP1"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "DUP4"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "AND"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "MUL"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "OR"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "SWAP1"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "SSTORE"
										},
										{
											"begin": 11006,
											"end": 11023,
											"name": "POP"
										},
										{
											"begin": 10817,
											"end": 11028,
											"name": "POP"
										},
										{
											"begin": 10817,
											"end": 11028,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "JUMPDEST"
										},
										{
											"begin": 5222,
											"end": 5229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "DUP4"
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "DUP4"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "MLOAD"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "DUP1"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "ADD"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "MSTORE"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "DUP1"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "DUP2"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "MSTORE"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "ADD"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "DUP2"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "MSTORE"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "POP"
										},
										{
											"begin": 5244,
											"end": 5247,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5244,
											"end": 5287,
											"name": "JUMPDEST"
										},
										{
											"begin": 5237,
											"end": 5287,
											"name": "SWAP1"
										},
										{
											"begin": 5237,
											"end": 5287,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "SWAP3"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "SWAP2"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "POP"
										},
										{
											"begin": 5164,
											"end": 5292,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GLCCOIN.sol\":\"GLC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GLCCOIN.sol\":{\"keccak256\":\"0xe67c84a836f594f24b8082d57a287e482ffb6a720291a19ce06033322f09a06d\",\"urls\":[\"bzz-raw://a580fcbb614f852bcf418b3964a7ffb26d9adba12148dd6990de2dbe55df4d14\",\"dweb:/ipfs/QmQLbrHdDjWmwx9PaRm9ZogCS3ThEmJ43SHyZChNn8nrLg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/GLCCOIN.sol:GLC",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IGLC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GLCCOIN.sol\":\"IGLC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GLCCOIN.sol\":{\"keccak256\":\"0xe67c84a836f594f24b8082d57a287e482ffb6a720291a19ce06033322f09a06d\",\"urls\":[\"bzz-raw://a580fcbb614f852bcf418b3964a7ffb26d9adba12148dd6990de2dbe55df4d14\",\"dweb:/ipfs/QmQLbrHdDjWmwx9PaRm9ZogCS3ThEmJ43SHyZChNn8nrLg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GLCCOIN.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GLCCOIN.sol\":{\"keccak256\":\"0xe67c84a836f594f24b8082d57a287e482ffb6a720291a19ce06033322f09a06d\",\"urls\":[\"bzz-raw://a580fcbb614f852bcf418b3964a7ffb26d9adba12148dd6990de2dbe55df4d14\",\"dweb:/ipfs/QmQLbrHdDjWmwx9PaRm9ZogCS3ThEmJ43SHyZChNn8nrLg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/GLCCOIN.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/GLCCOIN.sol\":4533:8827  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GLCCOIN.sol\":4533:8827  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158203a84c53c536ad99be8d28cbfbd9562b89ec76022104d7e061f9434e459bca4dc64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203a84c53c536ad99be8d28cbfbd9562b89ec76022104d7e061f9434e459bca4dc64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GASPRICE DUP5 0xC5 EXTCODECOPY MSTORE8 PUSH11 0xD99BE8D28CBFBD9562B89E 0xC7 PUSH1 0x22 LT 0x4D PUSH31 0x61F9434E459BCA4DC64736F6C634300051000320000000000000000000000 ",
							"sourceMap": "4533:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158203a84c53c536ad99be8d28cbfbd9562b89ec76022104d7e061f9434e459bca4dc64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GASPRICE DUP5 0xC5 EXTCODECOPY MSTORE8 PUSH11 0xD99BE8D28CBFBD9562B89E 0xC7 PUSH1 0x22 LT 0x4D PUSH31 0x61F9434E459BCA4DC64736F6C634300051000320000000000000000000000 ",
							"sourceMap": "4533:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4533,
									"end": 8827,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4533,
									"end": 8827,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203a84c53c536ad99be8d28cbfbd9562b89ec76022104d7e061f9434e459bca4dc64736f6c63430005100032",
									".code": [
										{
											"begin": 4533,
											"end": 8827,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "ADDRESS"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "EQ"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "MSTORE"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "DUP1"
										},
										{
											"begin": 4533,
											"end": 8827,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GLCCOIN.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GLCCOIN.sol\":{\"keccak256\":\"0xe67c84a836f594f24b8082d57a287e482ffb6a720291a19ce06033322f09a06d\",\"urls\":[\"bzz-raw://a580fcbb614f852bcf418b3964a7ffb26d9adba12148dd6990de2dbe55df4d14\",\"dweb:/ipfs/QmQLbrHdDjWmwx9PaRm9ZogCS3ThEmJ43SHyZChNn8nrLg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/GLCCOIN.sol": {
				"ast": {
					"absolutePath": "contracts/GLCCOIN.sol",
					"exportedSymbols": {
						"Context": [
							113
						],
						"GLC": [
							919
						],
						"IGLC": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 920,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "66:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IGLC",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "195:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "221:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "220:9:0"
									},
									"scope": 88,
									"src": "175:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "327:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "326:7:0"
									},
									"scope": 88,
									"src": "284:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "427:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "427:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:15:0"
									},
									"scope": 88,
									"src": "386:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "529:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "528:15:0"
									},
									"scope": 88,
									"src": "490:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "616:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "642:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "641:9:0"
									},
									"scope": 88,
									"src": "599:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "745:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "784:9:0"
									},
									"scope": 88,
									"src": "726:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1016:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:6:0"
									},
									"scope": 88,
									"src": "998:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1352:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1409:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1408:9:0"
									},
									"scope": 88,
									"src": "1334:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2058:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2057:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2109:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2109:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2108:6:0"
									},
									"scope": 88,
									"src": "2041:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2424:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2423:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2493:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2492:6:0"
									},
									"scope": 88,
									"src": "2402:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2669:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2691:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2711:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2668:57:0"
									},
									"src": "2654:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2890:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2913:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2938:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2889:63:0"
									},
									"src": "2875:78:0"
								}
							],
							"scope": 920,
							"src": "91:2864:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3652:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3640:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3652:0:0"
									},
									"scope": 113,
									"src": "3628:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3721:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3734:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3734:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3727:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3678:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3704:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3704:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3703:17:0"
									},
									"scope": 113,
									"src": "3659:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3810:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "3816:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3816:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "3952:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3952:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3945:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3770:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3796:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3796:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3795:14:0"
									},
									"scope": 113,
									"src": "3753:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "3457:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4825:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4831:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4847:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4831:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4862:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4867:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4862:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "4854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4854:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4854:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4914:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4907:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4770:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4815:9:0"
									},
									"scope": 298,
									"src": "4758:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5231:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5248:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5254:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5244:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5244:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5237:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5177:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5188:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5176:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5222:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5221:9:0"
									},
									"scope": 298,
									"src": "5164:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5651:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5665:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5670:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5665:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5673:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "5657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5657:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5657:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5692:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5692:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5704:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5708:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5704:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5692:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5723:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5716:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5569:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5580:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5591:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5568:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5642:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:9:0"
									},
									"scope": 298,
									"src": "5556:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6016:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6237:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6232:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6228:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6240:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6255:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6248:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6269:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6269:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6300:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6304:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6300:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6309:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6300:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6312:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "6292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6292:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6292:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6362:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6355:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5962:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5961:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6006:9:0"
									},
									"scope": 298,
									"src": "5949:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6866:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6883:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6886:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6889:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6879:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6879:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6872:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6812:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6811:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6857:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6856:9:0"
									},
									"scope": 298,
									"src": "6799:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7469:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7549:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7552:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "7537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7537:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7537:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7571:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7583:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7587:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7571:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7684:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7677:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7387:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7409:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7409:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7386:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7460:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7459:9:0"
									},
									"scope": 298,
									"src": "7374:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8177:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8194:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8200:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8190:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8190:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8183:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8123:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8134:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8122:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8167:9:0"
									},
									"scope": 298,
									"src": "8110:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8767:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8781:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8789:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "8773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8773:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8773:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8815:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8819:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8808:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8685:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8707:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8707:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8684:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8757:9:0"
									},
									"scope": 298,
									"src": "8672:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "4533:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9344:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9344:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9356:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9356:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9410:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9441:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9409:57:0"
									},
									"src": "9383:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9585:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9591:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9591:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9611:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9611:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9591:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9638:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9629:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9629:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9687:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9679:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9691:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9658:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9658:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9653:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9573:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9585:0:0"
									},
									"scope": 404,
									"src": "9561:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9821:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9827:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9788:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9811:9:0"
									},
									"scope": 404,
									"src": "9774:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9946:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9960:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9970:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9970:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9960:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9984:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "9952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9952:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10025:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9943:2:0"
									},
									"src": "9925:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10403:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10435:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10451:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10414:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10414:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10409:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10460:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10477:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10469:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10460:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10460:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10393:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10393:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10383:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10403:0:0"
									},
									"scope": 404,
									"src": "10357:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10685:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10710:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10691:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10691:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10691:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10675:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10675:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10649:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10685:0:0"
									},
									"scope": 404,
									"src": "10623:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10872:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10886:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10906:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10898:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10898:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10886:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10910:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "10878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10878:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10878:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10991:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10962:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10962:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10957:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11006:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11006:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11006:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10845:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10844:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10872:0:0"
									},
									"scope": 404,
									"src": "10817:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "9324:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11048:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11048:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IGLC",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11057:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IGLC_$88",
											"typeString": "contract IGLC"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11057:4:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11063:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11063:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 919,
							"linearizedBaseContracts": [
								919,
								404,
								88,
								113
							],
							"name": "GLC",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11081:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11075:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11094:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11106:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11115:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11106:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11126:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11157:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11166:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11157:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11186:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11177:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11197:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11231:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11231:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11263:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11263:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11289:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11289:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 919,
									"src": "11314:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11314:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "11359:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11365:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "476f6c64436f696e",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11373:10:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b470b64f9684895ecfc83110a816d93490c91ba3c581fa79b88c6850c1cbb39b",
															"typeString": "literal_string \"GoldCoin\""
														},
														"value": "GoldCoin"
													},
													"src": "11365:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11365:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "474c43",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11399:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_40aadb365ba2a2c571583ee51ecdefdcc45d490a938860659647216e026141e4",
															"typeString": "literal_string \"GLC\""
														},
														"value": "GLC"
													},
													"src": "11389:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11389:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11410:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11422:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11410:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11410:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11430:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_30000000000000000000000_by_1",
															"typeString": "int_const 30000000000000000000000"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3330303030",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11445:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30000_by_1",
																"typeString": "int_const 30000"
															},
															"value": "30000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11453:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11457:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "11453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "11445:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30000000000000000000000_by_1",
															"typeString": "int_const 30000000000000000000000"
														}
													},
													"src": "11430:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "11430:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 454,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11465:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11475:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11475:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11465:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11489:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11465:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "11465:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11530:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11522:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "11534:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11513:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11513:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "11508:51:0"
											}
										]
									},
									"documentation": null,
									"id": 471,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11359:0:0"
									},
									"scope": 919,
									"src": "11338:226:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "11671:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 475,
												"id": 478,
												"nodeType": "Return",
												"src": "11677:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11636:2:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "11662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11661:9:0"
									},
									"scope": 919,
									"src": "11619:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "11800:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 485,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11813:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 484,
												"id": 486,
												"nodeType": "Return",
												"src": "11806:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11767:2:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "11793:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11792:7:0"
									},
									"scope": 919,
									"src": "11750:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11935:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 492,
												"id": 494,
												"nodeType": "Return",
												"src": "11941:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11894:2:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11920:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11919:15:0"
									},
									"scope": 919,
									"src": "11879:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12062:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12075:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 500,
												"id": 502,
												"nodeType": "Return",
												"src": "12068:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12021:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "12047:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12046:15:0"
									},
									"scope": 919,
									"src": "12008:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "12191:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12204:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 510,
												"nodeType": "Return",
												"src": "12197:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12156:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "12182:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12181:9:0"
									},
									"scope": 919,
									"src": "12136:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "12338:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12351:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"argumentTypes": null,
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "12361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12351:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "12344:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12288:17:0"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "12329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12328:9:0"
									},
									"scope": 919,
									"src": "12270:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "12635:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 534,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12651:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12651:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 536,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "12665:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 537,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "12676:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "12641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12641:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12641:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12696:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 532,
												"id": 541,
												"nodeType": "Return",
												"src": "12689:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12576:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12575:35:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "12629:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12628:6:0"
									},
									"scope": 919,
									"src": "12558:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "12837:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 552,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12850:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 554,
														"indexExpression": {
															"argumentTypes": null,
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "12862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12850:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 556,
													"indexExpression": {
														"argumentTypes": null,
														"id": 555,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "12869:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12850:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 551,
												"id": 557,
												"nodeType": "Return",
												"src": "12843:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12773:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12772:32:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "12828:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12827:9:0"
									},
									"scope": 919,
									"src": "12754:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13077:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13092:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13092:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 571,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "13106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 572,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "13115:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13083:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13083:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "13083:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13135:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 576,
												"nodeType": "Return",
												"src": "13128:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13037:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13019:33:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13071:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13070:6:0"
									},
									"scope": 919,
									"src": "13003:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "13672:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 590,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 591,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "13696:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "13707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "13678:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13678:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "13678:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 597,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13737:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13737:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 606,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "13789:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13797:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13751:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 601,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 600,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "13763:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13751:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 604,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 602,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13771:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13771:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13751:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13751:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13751:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "13720:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13720:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "13720:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13854:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 612,
												"nodeType": "Return",
												"src": "13847:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13597:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13613:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13596:51:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "13666:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13665:6:0"
									},
									"scope": 919,
									"src": "13575:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "14317:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 624,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14332:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14332:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "14346:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 634,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "14394:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 627,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14355:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 628,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14367:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14367:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14355:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 631,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "14381:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14355:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14355:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14355:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14323:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14323:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "14323:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14419:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 622,
												"id": 639,
												"nodeType": "Return",
												"src": "14412:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14258:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14275:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14257:37:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "14311:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14310:6:0"
									},
									"scope": 919,
									"src": "14231:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "14975:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14990:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14990:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "15004:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15052:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15069:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 654,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15013:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 655,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15025:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15025:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15013:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 658,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "15039:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15013:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15013:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15013:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14981:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14981:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "14981:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15123:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 649,
												"id": 667,
												"nodeType": "Return",
												"src": "15116:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14928:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14910:42:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "14969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14968:6:0"
									},
									"scope": 919,
									"src": "14884:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15384:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15396:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "15410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "15390:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15390:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "15390:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15430:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 677,
												"id": 685,
												"nodeType": "Return",
												"src": "15423:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 674,
											"modifierName": {
												"argumentTypes": null,
												"id": 673,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15359:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15359:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15335:16:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15377:6:0"
									},
									"scope": 919,
									"src": "15322:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "15571:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15583:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "15597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "15577:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15577:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "15577:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15617:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 693,
												"id": 701,
												"nodeType": "Return",
												"src": "15610:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15532:16:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "15565:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15564:6:0"
									},
									"scope": 919,
									"src": "15519:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "16149:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 713,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16163:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16181:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16173:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16163:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16185:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16155:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "16155:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 722,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "16239:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16260:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16252:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16239:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16264:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16231:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "16231:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 730,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16309:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 732,
														"indexExpression": {
															"argumentTypes": null,
															"id": 731,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16319:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16309:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 737,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16359:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 733,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16329:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 735,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 734,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "16339:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16329:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16329:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16329:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16309:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "16309:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 742,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16406:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 744,
														"indexExpression": {
															"argumentTypes": null,
															"id": 743,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16416:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16406:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 749,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "16454:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16429:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 746,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "16439:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16429:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16429:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16429:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16406:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "16406:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 754,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16481:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16489:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 756,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "16500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16472:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16472:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "EmitStatement",
												"src": "16467:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16089:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16105:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "16124:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16088:51:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16149:0:0"
									},
									"scope": 919,
									"src": "16070:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "16819:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 768,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "16833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16852:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16844:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16833:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16856:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 767,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "16825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16825:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "16825:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16897:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16929:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 777,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16912:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16912:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16912:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16897:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "16897:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 783,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16942:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 785,
														"indexExpression": {
															"argumentTypes": null,
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "16952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16942:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16986:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 786,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16963:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 788,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 787,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "16973:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16963:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16963:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16963:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16942:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "16942:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17021:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17013:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 798,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "17025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 799,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "17034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17004:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "16999:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16777:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "16794:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16776:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16819:0:0"
									},
									"scope": 919,
									"src": "16762:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "17398:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 811,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "17412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17431:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17423:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17423:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17412:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17435:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "17404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "17404:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 819,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17478:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 821,
														"indexExpression": {
															"argumentTypes": null,
															"id": 820,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17478:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17522:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17530:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17499:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "17509:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17499:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17499:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17499:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17478:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "17478:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 831,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17573:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "17605:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 832,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17588:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17588:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17588:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17573:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "17573:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "17632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17649:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17641:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 843,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "17653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17623:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17623:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "17618:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "17373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17355:33:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17398:0:0"
									},
									"scope": 919,
									"src": "17341:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "18137:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18168:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18160:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18160:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18151:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18172:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18143:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "18143:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 866,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "18225:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18244:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18236:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18225:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18248:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															937,
															938
														],
														"referencedDeclaration": 938,
														"src": "18217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18217:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "18217:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 874,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18292:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 877,
															"indexExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "18304:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18292:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 878,
														"indexExpression": {
															"argumentTypes": null,
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18311:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18292:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 879,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "18322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18292:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "18292:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "18348:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "18355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "18364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18339:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18339:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "EmitStatement",
												"src": "18334:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18080:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18095:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "18112:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18079:48:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18137:0:0"
									},
									"scope": 919,
									"src": "18062:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "18601:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 897,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18613:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "18622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 896,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "18607:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18607:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "18607:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "18644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 903,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18653:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 912,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "18706:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18714:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 905,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18667:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 907,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 906,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 891,
																			"src": "18679:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18667:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 910,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 908,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18688:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18688:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18667:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18667:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18667:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "18635:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18635:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "18635:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18559:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "18576:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18558:33:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18601:0:0"
									},
									"scope": 919,
									"src": "18540:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 920,
							"src": "11032:7729:0"
						}
					],
					"src": "66:18695:0"
				},
				"id": 0
			}
		}
	}
}